/*!
 * tom32i-event-emitter.js - 1.0.1
 * https://github.com/Tom32i/event-emitter.js
 * Copyright 2016 Thomas JARRAND
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.EventEmitter=t():e.EventEmitter=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}var i=n(1),o=r(i);e.exports=o["default"]},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=function(){function e(){n(this,e),this._events={},this.on=this.addEventListener,this.off=this.removeEventListener}return r(e,[{key:"emit",value:function(e,t){if(this._events.hasOwnProperty(e))for(var n=this._events[e],r={type:e,detail:t},i=n.length,o=0;o<i;o++)this.handle(n[o],r)}},{key:"handle",value:function(e,t){e(t)}},{key:"addEventListener",value:function(e,t){this._events.hasOwnProperty(e)||(this._events[e]=[]),this._events[e].indexOf(t)<0&&this._events[e].push(t)}},{key:"removeEventListener",value:function(e,t){if(this._events.hasOwnProperty(e)){var n=this._events[e],r=n.indexOf(t);r>=0&&n.splice(r,1),0===n.length&&delete this._events[e]}}}]),e}();t["default"]=i}])});
//# sourceMappingURL=tom32i-event-emitter.js.map